# Generated by Django 5.2 on 2025-04-11 06:38

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('collector', '0001_initial'),
        ('news', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('keywords', models.JSONField(blank=True, default=list)),
                ('excluded_keywords', models.JSONField(blank=True, default=list)),
                ('news_articles', models.ManyToManyField(blank=True, related_name='topics', to='news.newsarticle')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='memory.topic')),
                ('related_topics', models.ManyToManyField(blank=True, to='memory.topic')),
                ('tweets', models.ManyToManyField(blank=True, related_name='topics', to='collector.tweet')),
            ],
            options={
                'verbose_name': 'Topic',
                'verbose_name_plural': 'Topics',
            },
        ),
        migrations.CreateModel(
            name='MemoryRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('memory_type', models.CharField(choices=[('short_term', 'Short Term'), ('medium_term', 'Medium Term'), ('long_term', 'Long Term')], max_length=20)),
                ('content_type', models.CharField(choices=[('tweets', 'Tweets'), ('news', 'News'), ('patterns', 'Patterns'), ('combined', 'Combined')], max_length=20)),
                ('raw_content', models.TextField()),
                ('summary', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('tweet_count', models.IntegerField(default=0)),
                ('news_count', models.IntegerField(default=0)),
                ('pattern_count', models.IntegerField(default=0)),
                ('token_count', models.IntegerField(default=0)),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memory_records', to='memory.topic')),
            ],
            options={
                'verbose_name': 'Memory Record',
                'verbose_name_plural': 'Memory Records',
            },
        ),
        migrations.CreateModel(
            name='UserRelationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship_type', models.CharField(choices=[('mention', 'Mention'), ('reply', 'Reply'), ('retweet', 'Retweet'), ('quote', 'Quote'), ('inferred', 'Inferred')], max_length=20)),
                ('strength', models.FloatField(default=0.0)),
                ('count', models.IntegerField(default=1)),
                ('first_seen', models.DateTimeField(auto_now_add=True)),
                ('last_seen', models.DateTimeField(auto_now=True)),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relationships_from', to='collector.twitteruser')),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relationships_to', to='collector.twitteruser')),
                ('topics', models.ManyToManyField(blank=True, related_name='user_relationships', to='memory.topic')),
            ],
            options={
                'verbose_name': 'User Relationship',
                'verbose_name_plural': 'User Relationships',
            },
        ),
        migrations.AddIndex(
            model_name='topic',
            index=models.Index(fields=['name'], name='memory_topi_name_d46dea_idx'),
        ),
        migrations.AddIndex(
            model_name='memoryrecord',
            index=models.Index(fields=['memory_type'], name='memory_memo_memory__442feb_idx'),
        ),
        migrations.AddIndex(
            model_name='memoryrecord',
            index=models.Index(fields=['content_type'], name='memory_memo_content_2963ed_idx'),
        ),
        migrations.AddIndex(
            model_name='memoryrecord',
            index=models.Index(fields=['created_at'], name='memory_memo_created_fda3bf_idx'),
        ),
        migrations.AddIndex(
            model_name='memoryrecord',
            index=models.Index(fields=['start_date', 'end_date'], name='memory_memo_start_d_c0173c_idx'),
        ),
        migrations.AddIndex(
            model_name='userrelationship',
            index=models.Index(fields=['relationship_type'], name='memory_user_relatio_b72023_idx'),
        ),
        migrations.AddIndex(
            model_name='userrelationship',
            index=models.Index(fields=['strength'], name='memory_user_strengt_70d9d2_idx'),
        ),
        migrations.AddIndex(
            model_name='userrelationship',
            index=models.Index(fields=['last_seen'], name='memory_user_last_se_8dbd59_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userrelationship',
            unique_together={('from_user', 'to_user', 'relationship_type')},
        ),
    ]
